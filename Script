## Investment Growth Script. Has become truly random for phases, based on personal investments and market performance

import numpy as np

# Initial investment. Set Principle amount. 
print("How much do you plan to initially invest?")
invest = int(input())
Principle = invest

# Random Triagular returns random numbers within a range, using a mode
Hi  = np.random.triangular(10, 12, 18, size = 30) / 100
Lo  = np.random.triangular(-3, 1, 4, size = 30) / 100
Med = np.random.triangular(5, 8, 11, size = 30) / 100

# Function defined. Rate is set to be an array.
def Investment_growth(mons, depo, rate):
    """ prints investment growth outcome after x month, 
    with amt contributions, and at rate yearly growth """
    # Call to use global variable
    global invest
    investment = invest
    # 
    for _ in range(mons):
        ret = investment * np.random.choice(rate) / 12
        investment += ret + depo
    deposits = mons * depo
    principle = invest + deposits
    # Reset Invested amount
    invest = investment
    tot_years = mons / 12

    # Print Statements
    print(f" Investment $ {round(investment):,} \n Principle $ {round(Principle + deposits):,} \n Growth ${round(investment - principle):,}".rjust(1, " "))
    print(f" Overall interest growth would be {(investment / principle) - 1:.3%} over a {round(mons / 12, 2)} year period.")
    print("\n")
    # Returns total years, initial investments, total deposits, and final investment
    return tot_years, principle, deposits, investment

# For multiple phases of Investment
print("\n",'Financial Projection'.center(101, '*'), "\n")

# First Phase of Investments and intial deposit
tot_years, principle, deposits, investment = Investment_growth(12, 50, Hi)
years = tot_years
Principle = principle

# Additional Invest Amounts should be added to the next phase
#invest += 10000

# Second Phase
tot_years, principle, deposits, investment = Investment_growth(24, 100, Lo)
years += tot_years
Principle += deposits

# Third Phase
tot_years, principle, deposits, investment = Investment_growth(60, 100, Med)
years += tot_years
Principle += deposits

# Fourth Phase. Take to 15 years. 
tot_years, principle, deposits, investment = Investment_growth(84, 100, Hi)
years += tot_years
Principle += deposits

# Fifth Phase. Take me to 30 years with Med performance market. 
tot_years, principle, deposits, investment = Investment_growth(180, 100, Med)
years += tot_years
Principle += deposits

# Print out Performance
print(f"Growth Rate over deposits by year {(investment / Principle - 1) / years:.3%}")
print(f"  Total deposits $ {Principle:,} \n  Growth $ {investment - Principle:,.0f}")
print(f"  Total years: {years}")
